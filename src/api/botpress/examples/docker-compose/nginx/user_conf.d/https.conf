############################################################################################
# This is a sample NGINX configuration file
# Check our documentation for a secured config
# https://botpress.com/docs/advanced/hosting/#secure-configuration-for-the-nginx-server
############################################################################################

upstream botpress_server {
  server botpress:3000;
}
# Disable sending the server identification
server_tokens off;

# Prevent displaying Botpress in an iframe (clickjacking protection)
add_header X-Frame-Options SAMEORIGIN;

# Prevent browsers from detecting the mimetype if not sent by the server.
add_header X-Content-Type-Options nosniff;

# Force enable the XSS filter for the website, in case it was disabled manually
add_header X-XSS-Protection "1; mode=block";

# Configure the cache for static assets
proxy_cache_path /srv/nginx_cache levels=1:2 keys_zone=my_cache:15m max_size=10g
              inactive=60m use_temp_path=off;

server {
  # Listen to port 443 on both IPv4 and IPv6.
  listen 443 ssl default_server reuseport;
  listen [::]:443 ssl default_server reuseport;

  # Domain names this server should respond to.
  server_name $PLACE_HOLDER_DOMAIN_NAME www.$PLACE_HOLDER_DOMAIN_NAME;
  # Load the certificate files.
  ssl_certificate         /etc/letsencrypt/live/$PLACE_HOLDER_DOMAIN_NAME/fullchain.pem;
  ssl_certificate_key     /etc/letsencrypt/live/$PLACE_HOLDER_DOMAIN_NAME/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/$PLACE_HOLDER_DOMAIN_NAME/chain.pem;

  # Load the Diffie-Hellman parameter.
  ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

  # Enable caching of assets by NGINX to reduce load on the server
  location ~ .*/assets/.* {
    proxy_cache my_cache;
    proxy_ignore_headers Cache-Control;
    proxy_hide_header Cache-Control;
    proxy_hide_header Pragma;
    proxy_pass http://botpress_server;
    proxy_cache_valid any 30m;
    proxy_set_header Cache-Control max-age=30;
    add_header Cache-Control max-age=30;
  }

  # We need to add specific headers so the websockets can be set up through the reverse proxy
  location /socket.io/ {
    proxy_pass http://botpress_server/socket.io/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }

  # All other requests should be directed to the server
  location / {
    proxy_pass http://botpress_server;
  }
}
